---
// import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

// import { getAllPosts } from "@/data/post";
// import PostLayout from "@/layouts/BlogPost.astro";

// export const getStaticPaths = (async () => {
// 	const blogEntries = await getAllPosts();
// 	return blogEntries.map((entry) => ({
// 		params: { slug: entry.slug },
// 		props: { entry },
// 	}));
// }) satisfies GetStaticPaths;

// type Props = InferGetStaticPropsType<typeof getStaticPaths>;

// const { entry } = Astro.props;
// const { Content } = await entry.render();

//! https://docs.astro.build/en/guides/content-collections/#building-for-server-output-ssr

import PostLayout from "@/layouts/BlogPost.astro";
import { getEntry } from "astro:content";

// 1. Get the slug from the incoming server request
const { slug } = Astro.params;

if (slug === undefined) {
	throw new Error("Slug is required");
}
// 2. Query for the entry directly using the request slug
const entry = await getEntry("post", slug);

// 3. Redirect if the entry does not exist
if (entry === undefined) {
	return Astro.redirect("/404");
}

// 4. (Optional) Render the entry to HTML in the template
const { Content } = await entry.render();
---

<PostLayout post={entry}>
	<Content />
</PostLayout>
