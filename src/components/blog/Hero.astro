---
import type { CollectionEntry } from "astro:content";

import { Image } from "astro:assets";

import FormattedDate from "../FormattedDate.astro";
import AnimatedTag from "./AnimatedTag.astro";

interface Props {
	content: CollectionEntry<"post">;
}

const {
	content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

{
	data.coverImage && (
		<div class="aspect-h-9 aspect-w-16 mb-6">
			<Image
				alt={data.coverImage.alt}
				class="object-cover"
				fetchpriority="high"
				loading="eager"
				src={data.coverImage.src}
			/>
		</div>
	)
}
{data.draft ? <span class="text-base text-red-500">(Draft)</span> : null}
<h1 class="mb-3 sm:mb-1">
	{data.title}
</h1>
<p class="pb-2 font-normal text-fgColour-muted">
	{data.description}
</p>

<hr class="my-4 border-t border-fgColour-muted/10" />

<div
	class="flex flex-wrap items-center justify-between gap-x-3 gap-y-2 pb-4 text-3xs sm:text-xs font-normal text-fgColour-muted/60"
>
	<p>
		<FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /> Â·{" "}
		{remarkPluginFrontmatter.minutesRead}
	</p>
	{
		data.updatedDate && (
			<p>
				Last Updated:
				<FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
			</p>
		)
	}
</div>
<AnimatedTag tags={data.tags} />